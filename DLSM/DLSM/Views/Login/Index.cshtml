@model DLSM.Models.Staff
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Message Session Time Out -->
@if (null != ViewBag.TimeOut)
{
    <script type="text/javascript">
    alert("@ViewBag.TimeOut");
    </script>
}

<style>
    /*body, html {
        height: 100%;
        background: rgba(221,41,227,1);
        background: -moz-linear-gradient(left, rgba(221,41,227,1) 0%, rgba(168,1,219,1) 50%, rgba(221,41,227,1) 100%);
        background: -webkit-gradient(left top, right top, color-stop(0%, rgba(221,41,227,1)), color-stop(50%, rgba(168,1,219,1)), color-stop(100%, rgba(221,41,227,1)));
        background: -webkit-linear-gradient(left, rgba(221,41,227,1) 0%, rgba(168,1,219,1) 50%, rgba(221,41,227,1) 100%);
        background: -o-linear-gradient(left, rgba(221,41,227,1) 0%, rgba(168,1,219,1) 50%, rgba(221,41,227,1) 100%);
        background: -ms-linear-gradient(left, rgba(221,41,227,1) 0%, rgba(168,1,219,1) 50%, rgba(221,41,227,1) 100%);
        background: linear-gradient(to right, rgba(221,41,227,1) 0%, rgba(168,1,219,1) 50%, rgba(221,41,227,1) 100%);
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#dd29e3', endColorstr='#dd29e3', GradientType=1 );
    }*/

       .login_box {
           background: #f7f7f7;
           border: 3px solid #F4F4F4;
           padding-left: 15px;
           margin-bottom: 25px;
           width:100%;
       }

       .input_title {
           color: rgba(164, 164, 164, 0.9);
           padding-left: 3px;
           margin-bottom: 2px;
       }

       hr {
           width: 100%;
       }

       .welcome {
           font-family: "myriad-pro",sans-serif;
           font-style: normal;
           font-weight: 100;
           color: #FFFFFF;
           margin-bottom: 25px;
           margin-top: 50px;
       }

       .login_title {
           font-family: "myriad-pro",sans-serif;
           font-style: normal;
           font-weight: 100;
           color: rgba(164, 164, 164, 0.44);
       }

       .card-container.card {
           max-width: 350px;
       }

    .btn {
        font-weight: 700;
        height: 36px;
        -moz-user-select: none;
        -webkit-user-select: none;
        user-select: none;
        cursor: default;
        border-radius: 0;
        background: #43A6EB;
        height: 55px;
        margin-bottom: 10px;
        width: 100%;
    }

       /*
    * Card component
    */
       .card {
           background-color: #FFFFFF;
           /* just in case there no content*/
           padding: 1px 25px 30px;
           margin: 0 auto 25px;
           margin-top: 15%x;
           /* shadows and rounded borders */
           -moz-border-radius: 2px;
           -webkit-border-radius: 2px;
           border-radius: 2px;
           -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
           -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
           box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
       }

       .profile-img-card {
           width: 96px;
           height: 96px;
           margin: 0 auto 10px;
           display: block;
           -moz-border-radius: 50%;
           -webkit-border-radius: 50%;
           border-radius: 50%;
       }

       /*
    * Form styles
    */
       .profile-name-card {
           font-size: 16px;
           font-weight: bold;
           text-align: center;
           margin: 10px 0 0;
           min-height: 1em;
       }

       .reauth-email {
           display: block;
           color: #404040;
           line-height: 2;
           margin-bottom: 10px;
           font-size: 14px;
           text-align: center;
           overflow: hidden;
           text-overflow: ellipsis;
           white-space: nowrap;
           -moz-box-sizing: border-box;
           -webkit-box-sizing: border-box;
           box-sizing: border-box;
       }

       .form-signin #inputEmail,
       .form-signin #inputPassword {
           direction: ltr;
           height: 44px;
           font-size: 16px;
       }

       .form-signin input[type=email],
       .form-signin input[type=password],
       .form-signin input[type=text],
       .form-signin button {
           width: 100%;
           display: block;
           z-index: 1;
           position: relative;
           -moz-box-sizing: border-box;
           -webkit-box-sizing: border-box;
           box-sizing: border-box;
       }

       .form-signin .form-control:focus {
           border-color: rgb(104, 145, 162);
           outline: 0;
           -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);
           box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);
       }

       .btn.btn-signin {
           /*background-color: #4d90fe; */
           background-color: rgb(104, 145, 162);
           /* background-color: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));*/
           padding: 0px;
           font-weight: 700;
           font-size: 14px;
           height: 36px;
           -moz-border-radius: 3px;
           -webkit-border-radius: 3px;
           border-radius: 3px;
           border: none;
           -o-transition: all 0.218s;
           -moz-transition: all 0.218s;
           -webkit-transition: all 0.218s;
           transition: all 0.218s;
       }

           .btn.btn-signin:hover,
           .btn.btn-signin:active,
           .btn.btn-signin:focus {
               background-color: rgb(12, 97, 33);
           }

       .forgot-password {
           color: rgb(104, 145, 162);
       }

           .forgot-password:hover,
           .forgot-password:active,
           .forgot-password:focus {
               color: rgb(12, 97, 33);
           }

    .field-validation-error{
        color:red;
    }
</style>


@*<div id="login-div">
    @using (Html.BeginForm("Autherize", "Login",FormMethod.Post))
    {
        <table class="table-bordered">
            <tr>
                <td></td>
                <td style="text-decoration:underline">Welcome</td>
            </tr>
            <tr>
                <td>UserName </td>
                <td>@Html.EditorFor(model => model.UserLogin , new { @Class = "form-control"})</td>
            </tr>
            <tr>
                <td></td>
                <td>@Html.ValidationMessageFor(model => model.UserLogin)</td>
            </tr>
            <tr>
                <td>Password</td>
                <td>@Html.EditorFor(model => model.UserPassword, new { @Class = "form-control" })</td>
            </tr>
            <tr>
                <td></td>
                <td>@Html.ValidationMessageFor(model => model.UserPassword)</td>
            </tr>
            <tr>
                <td colspan="2">
                    <label class="field-validation-error">@Html.DisplayFor(model => model.LoginErrorMessage)</label>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input type="submit" value="Login" name="name" class="btn btn-primary" />
                    <input type="reset" value="Clear" name="name" class="btn btn-warning"/>
                </td>
            </tr>
        </table>
    }

</div>*@


    <script>try { Typekit.load({ async: true }); } catch (e) { }</script>
    
   
        <div class="container" style="padding-top:50px;">
            <div class="card card-container">
                @using (Html.BeginForm("Autherize", "Login", FormMethod.Post))
                {
                    <span id="reauth-email" class="reauth-email"></span>
                    <p class="input_title">รหัสผู้ใช้</p>
                    <input type="text" id="UserLogin" name="UserLogin" class="login_box" placeholder="รหัสผู้ใช้" required autofocus>
                    <p class="input_title">รหัสผ่าน</p>
                    <input type="password" id="UserPassword" name="UserPassword" class="login_box" placeholder="********" required>
                    <div id="remember" class="checkbox">
                        <div style="text-align:center">
                            <label class="field-validation-error">@Html.DisplayFor(model => model.LoginErrorMessage)</label>
                        </div>
                    </div>
                    <div style="width:100%; text-align: right;padding-right: 15px;">
                        <button class="btn btn-primary" value="Login" type="submit" style="width: 50px;"><i class="fa fa-lock fa-3"></i></button>
                    </div>
                }
            </div><!-- /card-container -->
        </div><!-- /container -->
    

